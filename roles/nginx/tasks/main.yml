---
- assert:
    that:
      - site_name | string | length > 0
      - user_name | string | length > 0

- name: Add Nginx repository.
  apt_repository:
    repo: ppa:ondrej/nginx
    state: present
  register: add_repository

- name: Install Nginx.
  apt:
    name:
      - nginx
    state: present
    update_cache: "{{ add_repository.changed }}"
  notify: "reload nginx"

- name: Create directories.
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    mode: "0755"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  loop:
    - path: "/etc/nginx/global"
      user: root
      group: root
      state: directory
    - path: "/etc/nginx/locations"
      user: root
      group: root
      state: directory
    - path: "/www/{{ site_name }}/logs"
      user: root
      group: root
      state: directory
    - path: "/www/{{ site_name }}/certs"
      user: root
      group: root
      state: directory
    - path: "/www/{{ site_name }}/public"
      user: "{{ user_name }}"
      group: www-data
      state: directory
    - path: "/www/{{ site_name }}/private"
      user: "{{ user_name }}"
      group: www-data
      state: directory
    - path: "/www/{{ site_name }}/certificates"
      user: root
      group: root
      state: absent

- name: Generate certificate key.
  openssl_privatekey:
    path: "/www/{{ site_name }}/certs/default.key"
  notify: reload nginx

- name: Generate certificate csr.
  openssl_csr:
    path: "/www/{{ site_name }}/certs/default.csr"
    privatekey_path: "/www/{{ site_name }}/certs/default.key"
  notify: reload nginx

- name: Generate default certificate.
  openssl_certificate:
    path: "/www/{{ site_name }}/certs/default.crt"
    privatekey_path: "/www/{{ site_name }}/certs/default.key"
    csr_path: "/www/{{ site_name }}/certs/default.csr"
    provider: selfsigned
  notify: reload nginx

- name: Generate Nginx configuration.
  template:
    src: "{{ item.template }}"
    dest: "{{ item.destination }}"
    mode: "0644"
  loop:
    - template: nginx.j2
      destination: /etc/nginx/nginx.conf
    - template: sites-available/default.j2
      destination: /etc/nginx/sites-available/default
    - template: logrotate.j2
      destination: /etc/logrotate.d/www-logs
  notify:
    - reload nginx

- name: Ensure Nginx is started and enabled on boot.
  service:
    name: nginx
    state: started
    enabled: true
