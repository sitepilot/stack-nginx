# {{ ansible_managed }}

fastcgi_cache_path /opt/sitepilot/sites/{{ site_name }}/.cache levels=1:2 keys_zone={{ site_name }}:100m inactive=1d;

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {{ site_domains | join(' ') }};

  set $static_files_cache 7d;
  set $base /opt/sitepilot/sites/{{ site_name }};

  root $base/files{{ '/' + site_document_root if site_document_root | length > 0 else '' }};

  index index.php index.html;

  # SSL
  include global/https.conf;
  ssl_certificate default.crt;
  ssl_certificate_key default.key;

  # Logs
  access_log /opt/sitepilot/sites/{{ site_name }}/logs/access.log;
  error_log /opt/sitepilot/sites/{{ site_name }}/logs/error.log;

  # Global locations
  include locations/*;

  # Health
  location ~* /-/ping/ {
    include fastcgi.conf;
    fastcgi_pass unix:/run/php/php{{ site_php_version }}-{{ site_name }}.sock;
  }

  # Default location
  location / {
{% if site_htpasswd | length > 0 %}
    # Basic auth
    auth_basic $auth_basic;
    auth_basic_user_file $base/.config/htpasswd;
{% endif %}

{% if site_block_robots %}
    # Block robots
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
{% endif %}

{% if site_hsts_enabled %}
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
{% endif %}

{% if site_security_enabled %}
    # Security
    include global/security.conf;
{% endif %}

{% if site_cache_enabled %}
    # Cache
    if ($request_method = PURGE) {
      set $cache_purge_path "/opt/sitepilot/sites/{{ site_name }}/.cache";
      content_by_lua_file conf/lua/purge.lua;
    }

    # Show the cache status in server responses
    add_header X-Sitepilot-Cache $upstream_cache_status;
{% endif %}

    # Static files
    include global/static-files.conf;

    # Permalinks
    try_files $uri $uri/ /index.php?$args;

    # PHP
    location ~ \.php$ {
      try_files $uri =404;
      include fastcgi.conf;
{% if site_cache_enabled %}
      include global/fastcgi-cache.conf;
      fastcgi_cache_bypass $skip_cache;
      fastcgi_no_cache $skip_cache;
      fastcgi_cache {{ site_name }};
      fastcgi_cache_valid 200 301 1d;
{% endif %}
      fastcgi_pass unix:/run/php/php{{ site_php_version }}-{{ site_name }}.sock;
    }
  }
}

# HTTPS redirect
server {
  listen 80;
  listen [::]:80;
  server_name {{ site_domains | join(' ') }};
  return 301 https://$host$request_uri;
}
