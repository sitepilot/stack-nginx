---
- assert:
    that:
      - user_name | length > 0
      - user_password | length > 0
      - site_name | length > 0

- name: "Create {{ user_name }} user."
  user:
    name: "{{ user_name }}"
    group: "www-data"
    password: "{{ user_password }}"
    groups: "{{ user_groups }}"
    create_home: true
    home: "/www/{{ site_name }}"
    shell: /bin/bash

- name: Add authorized keys.
  authorized_key:
    user: "{{ user_name }}"
    state: "present"
    key: "{{ user_authorized_keys | join('\n') }}"
    exclusive: true

- name: Create directories.
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    mode: "0755"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
  loop:
    - path: "/www/{{ site_name }}/logs"
      user: root
      group: root
      state: directory
    - path: "/www/{{ site_name }}/certs"
      user: root
      group: root
      state: directory
    - path: "/www/{{ site_name }}/public"
      user: "{{ user_name }}"
      group: www-data
      state: directory
    - path: "/www/{{ site_name }}/private"
      user: "{{ user_name }}"
      group: www-data
      state: directory
    - path: "/www/{{ site_name }}/certificates"
      user: root
      group: root
      state: absent

- name: Generate certificate key.
  openssl_privatekey:
    path: "/www/{{ site_name }}/certs/default.key"

- name: Generate certificate csr.
  openssl_csr:
    path: "/www/{{ site_name }}/certs/default.csr"
    privatekey_path: "/www/{{ site_name }}/certs/default.key"

- name: Generate default certificate.
  openssl_certificate:
    path: "/www/{{ site_name }}/certs/default.crt"
    privatekey_path: "/www/{{ site_name }}/certs/default.key"
    csr_path: "/www/{{ site_name }}/certs/default.csr"
    provider: selfsigned
